# Generated by Django 4.2.7 on 2025-10-17 04:54

from django.db import migrations, models
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('ai_analysis', '0004_aianalysis_ai_disclaimer'),
    ]

    operations = [
        migrations.CreateModel(
            name='AccessLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('doctor_id', models.UUIDField()),
                ('patient_id', models.UUIDField()),
                ('record_id', models.UUIDField(blank=True, null=True)),
                ('action', models.TextField()),
                ('reason', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'access_logs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AIInsight',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('record_id', models.UUIDField(blank=True, null=True)),
                ('user_id', models.UUIDField(default=uuid.uuid4)),
                ('insight_type', models.TextField()),
                ('content', models.TextField()),
                ('confidence_score', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'ai_insights',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Consent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('patient_id', models.UUIDField(default=uuid.uuid4)),
                ('doctor_id', models.UUIDField(default=uuid.uuid4)),
                ('record_ids', models.JSONField(blank=True, default=list)),
                ('scope', models.TextField(default='view')),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(choices=[('active', 'Active'), ('revoked', 'Revoked'), ('expired', 'Expired')], default='active')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'consents',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ConsentRequest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('patient_id', models.UUIDField(default=uuid.uuid4)),
                ('doctor_id', models.UUIDField(default=uuid.uuid4)),
                ('purpose', models.TextField()),
                ('requested_data_types', models.JSONField(default=list)),
                ('duration_days', models.IntegerField(default=30)),
                ('status', models.TextField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('denied', 'Denied'), ('revoked', 'Revoked'), ('expired', 'Expired')], default='pending')),
                ('message', models.TextField(blank=True, null=True)),
                ('requested_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('responded_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'consent_requests',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Consultation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('patient_id', models.UUIDField(default=uuid.uuid4)),
                ('doctor_id', models.UUIDField(default=uuid.uuid4)),
                ('consultation_date', models.DateField()),
                ('consultation_time', models.TimeField()),
                ('reason', models.TextField()),
                ('notes', models.TextField(blank=True, null=True)),
                ('status', models.TextField(choices=[('scheduled', 'Scheduled'), ('confirmed', 'Confirmed'), ('scheduled_no_consent', 'Scheduled No Consent'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='scheduled')),
                ('consent_id', models.UUIDField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'consultations',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ConsultationNote',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('consultation_id', models.UUIDField()),
                ('doctor_id', models.UUIDField()),
                ('notes', models.TextField()),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'consultation_notes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('user_id', models.UUIDField(default=uuid.uuid4)),
                ('event_type', models.TextField()),
                ('event_data', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'events',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('user_id', models.UUIDField(default=uuid.uuid4)),
                ('profile_id', models.UUIDField(blank=True, null=True)),
                ('type', models.CharField(max_length=50)),
                ('title', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('read', models.BooleanField(default=False)),
                ('action_url', models.CharField(blank=True, max_length=500, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PatientAccess',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('patient_id', models.UUIDField(default=uuid.uuid4)),
                ('doctor_id', models.UUIDField(default=uuid.uuid4)),
                ('access_level', models.TextField(choices=[('view', 'View'), ('edit', 'Edit'), ('full', 'Full')], default='view')),
                ('granted_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(choices=[('active', 'Active'), ('revoked', 'Revoked'), ('expired', 'Expired')], default='active')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'patient_access',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('patient_id', models.UUIDField(default=uuid.uuid4)),
                ('doctor_id', models.UUIDField(default=uuid.uuid4)),
                ('consultation_id', models.UUIDField(blank=True, null=True)),
                ('medication_name', models.TextField()),
                ('dosage', models.TextField()),
                ('frequency', models.TextField()),
                ('duration', models.TextField()),
                ('instructions', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'prescriptions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('user_id', models.UUIDField(unique=True)),
                ('full_name', models.TextField()),
                ('email', models.TextField()),
                ('phone', models.TextField(blank=True, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('gender', models.TextField(blank=True, null=True)),
                ('blood_group', models.TextField(blank=True, null=True)),
                ('allergies', models.TextField(blank=True, null=True)),
                ('emergency_contact_name', models.TextField(blank=True, null=True)),
                ('emergency_contact_phone', models.TextField(blank=True, null=True)),
                ('emergency_contact_relationship', models.TextField(blank=True, null=True)),
                ('role', models.TextField(choices=[('patient', 'Patient'), ('doctor', 'Doctor')], default='patient')),
                ('specialization', models.TextField(blank=True, null=True)),
                ('license_number', models.TextField(blank=True, null=True)),
                ('hospital_affiliation', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'profiles',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('doctor_id', models.UUIDField()),
                ('patient_id', models.UUIDField(blank=True, null=True)),
                ('schedule_date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('status', models.TextField(choices=[('available', 'Available'), ('booked', 'Booked'), ('cancelled', 'Cancelled')], default='available')),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'schedules',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AlterModelOptions(
            name='aianalysis',
            options={'ordering': ['-created_at']},
        ),
        migrations.AlterModelOptions(
            name='healthrecord',
            options={'ordering': ['-created_at']},
        ),
        migrations.RenameField(
            model_name='aianalysis',
            old_name='processed_at',
            new_name='created_at',
        ),
        migrations.RenameField(
            model_name='healthrecord',
            old_name='uploaded_at',
            new_name='created_at',
        ),
        migrations.RemoveField(
            model_name='aianalysis',
            name='ai_disclaimer',
        ),
        migrations.RemoveField(
            model_name='aianalysis',
            name='analysis_type',
        ),
        migrations.RemoveField(
            model_name='aianalysis',
            name='confidence',
        ),
        migrations.RemoveField(
            model_name='aianalysis',
            name='detailed_report',
        ),
        migrations.RemoveField(
            model_name='aianalysis',
            name='disclaimer',
        ),
        migrations.RemoveField(
            model_name='aianalysis',
            name='medicine_names',
        ),
        migrations.RemoveField(
            model_name='aianalysis',
            name='predictive_insights',
        ),
        migrations.RemoveField(
            model_name='aianalysis',
            name='record_title',
        ),
        migrations.RemoveField(
            model_name='healthrecord',
            name='file_type',
        ),
        migrations.RemoveField(
            model_name='healthrecord',
            name='metadata',
        ),
        migrations.RemoveField(
            model_name='healthrecord',
            name='patient_id',
        ),
        migrations.RemoveField(
            model_name='healthrecord',
            name='record_date',
        ),
        migrations.RemoveField(
            model_name='healthrecord',
            name='uploaded_by',
        ),
        migrations.AddField(
            model_name='aianalysis',
            name='confidence_score',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='aianalysis',
            name='user_id',
            field=models.UUIDField(default=uuid.uuid4),
        ),
        migrations.AddField(
            model_name='healthrecord',
            name='provider_name',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='healthrecord',
            name='service_date',
            field=models.DateField(default=django.utils.timezone.now),
        ),
        migrations.AddField(
            model_name='healthrecord',
            name='tags',
            field=models.JSONField(blank=True, default=list),
        ),
        migrations.AddField(
            model_name='healthrecord',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='healthrecord',
            name='user_id',
            field=models.UUIDField(default=uuid.uuid4),
        ),
        migrations.AlterField(
            model_name='aianalysis',
            name='id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='aianalysis',
            name='record_id',
            field=models.UUIDField(default=uuid.uuid4),
        ),
        migrations.AlterField(
            model_name='aianalysis',
            name='risk_warnings',
            field=models.JSONField(blank=True, default=list),
        ),
        migrations.AlterField(
            model_name='healthrecord',
            name='file_name',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='healthrecord',
            name='file_url',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='healthrecord',
            name='id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='healthrecord',
            name='record_type',
            field=models.TextField(choices=[('lab_test', 'Lab Test'), ('prescription', 'Prescription'), ('imaging', 'Imaging'), ('consultation', 'Consultation'), ('vaccination', 'Vaccination'), ('other', 'Other')]),
        ),
        migrations.AlterField(
            model_name='healthrecord',
            name='title',
            field=models.TextField(),
        ),
        migrations.AlterModelTable(
            name='aianalysis',
            table='ai_analyses',
        ),
    ]
